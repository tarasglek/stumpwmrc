;; -*-lisp-*-
;;
;; Here is a sample .stumpwmrc file

(in-package :stumpwm)
(defcommand konsole () ()
  "Start konsole unless it is already running, in which case focus it."
  (run-or-raise "konsole" '(:class "konsole")))

(defcommand chrome () ()
  "Start Chrome unless it is already running, in which case focus it."
  (run-or-raise "google-chrome" '(:class "Google-chrome")))

(defcommand firefox () ()
  "Start Firefox unless it is already running, in which case focus it."
  (run-or-raise "~/firefox/firefox" '(:class "Nightly")))

(defcommand vs () ()
  "Start VS Code unless it is already running, in which case focus it."
  (run-or-raise "code" '(:class "Code")))

(defcommand pavucontrol () ()
  "PulseAudio Volume Control"
  (run-or-raise "pavucontrol" '(:class "Pavucontrol")))

(defcommand lock-suspend () ()
  "Suspend to ram"
  (run-shell-command "i3lock -e -c 641E16 && sudo pm-suspend"))

(defcommand battery () ()
  "battery"
  (run-shell-command "upower -i `upower -e | grep BAT`" t))

(define-key *root-map* (kbd "c") "chrome")
(define-key *root-map* (kbd "k") "konsole")
(define-key *root-map* (kbd "f") "firefox")
(define-key *root-map* (kbd "v") "vs")
(define-key *root-map* (kbd "p") "pavucontrol")
(define-key *root-map* (kbd "F4") "delete-window")
(define-key *root-map* (kbd "b") "battery")

;;;; Default terminal emulator
(setq *terminal* "konsole")

;;;; Default Browser
(setq *browser* "google-chrome")

(run-shell-command "xmodmap -e 'clear mod4'")
(run-shell-command "xmodmap -e 'keycode 133 = F20'")
;; change the prefix key to something else
(set-prefix-key (stumpwm:kbd "F20"))
;; https://gitlab.com/wavexx/acpilight/
(defcommand brightness (value) ((:number "Adjust brightness: "))
  "Increment brightness."
  (let ((arg (if (plusp value) "-inc" "-dec")))
    (run-shell-command (format nil "xbacklight ~a ~a" arg (abs value))))
  (run-shell-command "xbacklight -get" t))

(define-key *top-map* (kbd "XF86MonBrightnessUp") "brightness 10")
(define-key *top-map* (kbd "XF86MonBrightnessDown") "brightness -10")

(define-key *root-map* (kbd "L") "lock-suspend")

(defcommand volume (value) ((:string "Adjust volume: "))
  "adjust volume"
  (run-shell-command  (format nil "pactl set-sink-volume @DEFAULT_SINK@ '~a%'" value))
  (run-shell-command "pacmd list-sinks | grep 'volume: front'" t)
  ;; (format nil "volume '~a%'" value)
)

(define-key *top-map* (kbd "XF86AudioLowerVolume") "volume -5")
(define-key *top-map* (kbd "XF86AudioRaiseVolume") "volume +5")
